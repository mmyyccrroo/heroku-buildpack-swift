#!/usr/bin/env bash

echo "-----> Checkinig if there is any pre-compile hook"
if [ -f bin/pre_compile ]; then
  echo "-----> Running pre-compile hook"
  chmod +x bin/pre_compile
  ./bin/pre_compile
else
	echo "-----> No pre-compile hooks found"
fi

# echo "-----> Install system level dependencies"
# APT_CACHE_DIR="$CACHE_DIR/apt/cache"
# APT_STATE_DIR="$CACHE_DIR/apt/state"
# mkdir -p "$APT_CACHE_DIR/archives/partial"
# mkdir -p "$APT_STATE_DIR/lists/partial"
# APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"
# apt-get $APT_OPTIONS update
# apt-get $APT_OPTIONS -y --force-yes -d install --reinstall mongodb uuid-dev


step Checking dependencies
if [ -f $CACHE_DIR/depends_done.$SCRIPT_VER ]; then
    say Dependencies cached
  else
    say Ok
    step Fetching dependencies
    URL=http://www.perfect.org/_buildpack
    fetch cedar14-clang-v2.tar.gz
    fetch cedar14-libicu-dev.tar.gz
    fetch cedar14-libmongoc.tar.gz
    fetch cedar14-libsasl2-dev.tar.gz
    fetch cedar14-libsqlite3-dev.tar.gz
    fetch cedar14-libssl-dev.tar.gz
    fetch cedar14-perfect.tar.gz
    fetch cedar14-uuid-dev.tar.gz
    fetch ubuntu14-clang-rt.tar.gz
    fetch ubuntu14-libevent-rt.tar.gz
    fetch ubuntu14-libicu-rt.tar.gz
    fetch ubuntu14-libmongoc-rt.tar.gz
    fetch ubuntu14-libsasl2-rt.tar.gz
    fetch ubuntu14-libsqlite3-rt.tar.gz
    fetch ubuntu14-libssl-rt.tar.gz
    fetch ubuntu14-perfect-rt.tar.gz
    fetch ubuntu14-swift-rt.tar.gz
    fetch ubuntu14-uuid-rt.tar.gz
    URL=https://swift.org/builds/swift-2.2-release/ubuntu1404/swift-2.2-RELEASE
    fetch swift-2.2-RELEASE-ubuntu14.04.tar.gz
    say Ok
    step Checking dependency MD5 values
    md5sum -c << EOF || fail Bad MD5 value
471e8f370015101a004998603922e919  $CACHE_DIR/cedar14-clang-v2.tar.gz
d50c65959548987594528e2704d67588  $CACHE_DIR/cedar14-libicu-dev.tar.gz
e2fa8dc41b7d6cce8473f875ab6627d0  $CACHE_DIR/cedar14-libmongoc.tar.gz
7f1d40eb4144a83530588d5de68da119  $CACHE_DIR/cedar14-libsasl2-dev.tar.gz
1a5e9d15b8aeac4079adac56e938b4ac  $CACHE_DIR/cedar14-libsqlite3-dev.tar.gz
16c5dcd214390fd64af1a45d1860c135  $CACHE_DIR/cedar14-libssl-dev.tar.gz
4c640c4b36c613e4ad52cf0dc5fea853  $CACHE_DIR/cedar14-perfect.tar.gz
24e6b6007e29a04b4751d562c5534c4b  $CACHE_DIR/cedar14-uuid-dev.tar.gz
58c5c574183bccd9945675768f2adba5  $CACHE_DIR/swift-2.2-RELEASE-ubuntu14.04.tar.gz
956144cc1494fe22cd0b16347896057b  $CACHE_DIR/ubuntu14-clang-rt.tar.gz
bf91872e5ffc3dad40cf060f95aabce5  $CACHE_DIR/ubuntu14-libevent-rt.tar.gz
aeaf99f022ba54420b36cd84abd86456  $CACHE_DIR/ubuntu14-libicu-rt.tar.gz
7f2f1bc7dfdab06da0b41d7429acc5ab  $CACHE_DIR/ubuntu14-libmongoc-rt.tar.gz
b619fcfd5f3df2c8111ca222957d684b  $CACHE_DIR/ubuntu14-libsasl2-rt.tar.gz
53398947bf52c53b805ab51161ff1f24  $CACHE_DIR/ubuntu14-libsqlite3-rt.tar.gz
3a6cb0424e11e8e0f107b8eb41061dfe  $CACHE_DIR/ubuntu14-libssl-rt.tar.gz
184728a2242aceb901b80139daa43db7  $CACHE_DIR/ubuntu14-perfect-rt.tar.gz
e735ca4d483c39da3661b6ee08f78204  $CACHE_DIR/ubuntu14-swift-rt.tar.gz
3f9db16d9b85a9534739826a3f9049b2  $CACHE_DIR/ubuntu14-uuid-rt.tar.gz
EOF
    say Ok
    step Decompressing dependencies
    decomp cedar14-clang-v2.tar.gz
    decomp cedar14-libicu-dev.tar.gz
    decomp cedar14-libmongoc.tar.gz
    decomp cedar14-libsasl2-dev.tar.gz
    decomp cedar14-libsqlite3-dev.tar.gz
    decomp cedar14-libssl-dev.tar.gz
    decomp cedar14-perfect.tar.gz
    decomp cedar14-uuid-dev.tar.gz
    decomp swift-2.2-RELEASE-ubuntu14.04.tar.gz
    decomp ubuntu14-clang-rt.tar.gz
    decomp ubuntu14-libevent-rt.tar.gz
    decomp ubuntu14-libicu-rt.tar.gz
    decomp ubuntu14-libmongoc-rt.tar.gz
    decomp ubuntu14-libsasl2-rt.tar.gz
    decomp ubuntu14-libsqlite3-rt.tar.gz
    decomp ubuntu14-libssl-rt.tar.gz
    decomp ubuntu14-perfect-rt.tar.gz
    decomp ubuntu14-swift-rt.tar.gz
    decomp ubuntu14-uuid-rt.tar.gz
    say Ok
    step Extracting dependencies
    untar swift-2.2-RELEASE-ubuntu14.04.tar
    rsync -Pa $CACHE_DIR/swift-2.2-RELEASE-ubuntu14.04/ $CACHE_DIR/.delta/ > $BUILD_DIR/build.log || fail Renaming Swift dir
    rm -rf $CACHE_DIR/swift-2.2-RELEASE-ubuntu14.04
    untar cedar14-clang-v2.tar
    untar cedar14-libicu-dev.tar
    untar cedar14-libmongoc.tar
    untar cedar14-libsasl2-dev.tar
    untar cedar14-libsqlite3-dev.tar
    untar cedar14-libssl-dev.tar
    untar cedar14-perfect.tar
    untar cedar14-uuid-dev.tar
    untar_rt ubuntu14-clang-rt.tar
    untar_rt ubuntu14-libevent-rt.tar
    untar_rt ubuntu14-libicu-rt.tar
    untar_rt ubuntu14-libmongoc-rt.tar
    untar_rt ubuntu14-libsasl2-rt.tar
    untar_rt ubuntu14-libsqlite3-rt.tar
    untar_rt ubuntu14-libssl-rt.tar
    untar_rt ubuntu14-perfect-rt.tar
    untar_rt ubuntu14-swift-rt.tar
    untar_rt ubuntu14-uuid-rt.tar
    touch $CACHE_DIR/depends_done.$SCRIPT_VER
  fi
say Ok

step Installing build dependencies into build environment
rsync -Pa $CACHE_DIR/.delta/ /app/.delta/ > $BUILD_DIR/build.log || fail rsync
say Ok
